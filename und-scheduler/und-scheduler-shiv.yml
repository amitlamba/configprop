# config context path to "/" by setting an empty string
server:
  port: 6363
  contextPath:

# JACKSON
spring:
  application:
    name: und-scheduler
  jackson:
    serialization:
      INDENT_OUTPUT: true
      write-dates-as-timestamps: false
  cloud:
      stream:
        kafka:
          binder:
            brokers: ${KAFKA_IP}
            defaultBrokerPort: ${KAFKA_PORT}
            #zkNodes: ${KAFKA_IP}
            defaultZkPort: 2181
            #producer-configuration:
        bindings:
          scheduleJobReceive:
            group: scheduleJobReceive
            destination: scheduleJobshiv
          campaignTriggerSend:
            group: campaignTriggerGroup
            destination: campaignTriggershiv
          scheduleJobAckSend:
            group: scheduleJobAckGroup
            destination: scheduleJobAckshiv

  quartz:
    job-store-type: jdbc
    jdbc:
      initialize-schema: never
    properties:
      org.quartz.jobStore.driverDelegateClass: org.quartz.impl.jdbcjobstore.PostgreSQLDelegate
  jpa:
    hibernate:
      ddl-auto: none
  datasource:
    url: jdbc:postgresql://${POSTGRES_IP}:${POSTGRES_PORT}/recurrenceshiv
    driver-class-name: org.postgresql.Driver
    username: postgres
    password:  postgres
    tomcat:
      initial-size: 10
      max-wait: 10000
      max-active: 50
      test-on-borrow: true

  zipkin:
    base-url: http://springbootzipkin:7777
    sender:
      type: kafka
  sleuth:
    sampler:
      probability: 1
  kafka:
    bootstrap-servers: ${KAFKA_IP}:${KAFKA_PORT}

using:
  spring:
    schedulerFactory: true

security:
  header:
    token: authorization
    username: UserName
  secret: mySecret
  expiration: 604800
  route:
    authentication:
      path: auth
      refresh: refresh

eureka:
  instance:
    prefer-ip-address: true
    health-check-url-path: /scheduler/health
  client:
    register-with-eureka: true
    fetch-registry: true
    region: desktop
    service-url:
      defaultZone: http://${EUREKA_IP}:${EUREKA_PORT}/eureka

logging:
  level:
    org:
      springframework: info
      apache: info
      hibernate: info
    com:
      und: info
  file: log/und-scheduler.log

encrypt:
  key: UserNDot@18

encryption-decryption:
  key:
    default: DaO1TXt5B0R92Yys
    unsubscribe: TaO5T01R9BXt2yYS

und:
  system:
    user:
      token: jasdghajskdhg
  url:
    event: http://userndot.com/event
  auth-url: http://nestros.com:8080/auth
  from-email: shiv@und.com