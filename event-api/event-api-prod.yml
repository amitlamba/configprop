server:
  port: 5454

spring:
  jackson:
    serialization:
      INDENT_OUTPUT: true
  cloud:
      stream:
        kafka:
          binder:
            brokers: ${KAFKA_IP}
            defaultBrokerPort: ${KAFKA_PORT}
            #zkNodes: ${KAFKA_IP}
            defaultZkPort: 2181
            #producer-configuration:
            configuration:
              enable:
                auto:
                  commit: true
              auto:
                offset:
                  reset: earliest
          bindings:
            inEvent:
              consumer:
                client:
                  id: 1
                group:
                  id: inEvent
              group: inEvent
              destination: event
            outEvent:
              group: outEvent
              destination: event
            inEventUser:
              consumer:
                client:
                  id: 2
                group:
                  id: inEventUser
              group: inEventUser
              destination: eventUser
            outEventUser:
              group: outEventUser
              destination: eventUser
            inProcessEventUserProfile:
              consumer:
                client:
                  id: 3
                group:
                  id: processEventUserProfile
              group: processEventUserProfile
              destination: processUserProfile
            outProcessEventUserProfile:
              group: processEventUserProfile
              destination: processUserProfile
            inTrackEvent:
              consumer:
                client:
                  id: 4
                group:
                  id: inTrackEvent
              group: inTrackEvent
              destination: trackEvent
            outTrackEvent:
              group: outTrackEvent
              destination: trackEvent
            inEmailRead:
              consumer:
                client:
                  id: 5
                group:
                  id: inEmailRead
              group: inEmailRead
              destination: emailRead
            outEmailRead:
              group: outEmailRead
              destination: emailRead
            inNotificationRead:
              consumer:
                client:
                  id: 6
                group:
                  id: inNotification
              group: inNotification
              destination: trackNotification
            outNotificationRead:
              group: outNotification
              destination: trackNotification
            outEventForLiveSegment:
              destination: processliveevent
        bindings:
          inEvent:
            group: inEvent
            destination: event
          outEvent:
            group: outEvent
            destination: event
          inEventUser:
            group: inEventUser
            destination: eventUser
          outEventUser:
            group: outEventUser
            destination: eventUser
          inProcessEventUserProfile:
              group: processEventUserProfile
              destination: processUserProfile
          outProcessEventUserProfile:
              group: processEventUserProfile
              destination: processUserProfile
          inTrackEvent:
            group: inTrackEvent
            destination: trackEvent
          outTrackEvent:
            group: outTrackEvent
            destination: trackEvent
          inEmailRead:
            group: inEmailRead
            destination: emailRead
          outEmailRead:
            group: outEmailRead
            destination: emailRead
          inNotificationRead:
            group: inNotification
            destination: trackNotification
          outNotificationRead:
            group: outNotification
            destination: trackNotification
          outEventForLiveSegment:
            destination: processliveevent
  datasource:
    url: jdbc:postgresql://${POSTGRES_IP}:${POSTGRES_PORT}/und
    driver-class-name: org.postgresql.Driver
    username: ${POSTGRES_USERNAME}
    password: ${POSTGRES_PASSWORD}
    tomcat:
      initial-size: 10
      max-wait: 10000
      max-active: 50
      test-on-borrow: true

  data:
    mongodb:
      database: eventdb
      host: ${MONGO_IP}
      port: ${MONGO_PORT}

  zipkin:
    base-url: http://springbootzipkin:7777
    sender:
      type: kafka
  sleuth:
    sampler:
      probability: 1
  kafka:
    bootstrap-servers: ${KAFKA_IP}:${KAFKA_PORT}

security:
  header:
    token: Authorization
    username: UserName
  secret: mySecret
  expiration: 604800
  route:
    authentication:
      path: auth
      refresh: refresh

eureka:
  instance:
    prefer-ip-address: true
    health-check-url-path: /application/health
  client:
    register-with-eureka: true
    fetch-registry: true
    region: desktop
    service-url:
      defaultZone: http://${EUREKA_IP}:${EUREKA_PORT}/eureka

logging:
  level:
    org:
      springframework: info
      apache: info
      hibernate: info
    com:
      und: info
  file: ${HOME}/log/und-event-api.log

und:
  system:
    user:
      token: jasdghajskdhg
  url:
    event: https://userndot.com/event
  auth-url: https://userndot.com/auth
  from-email: admin@userndot.com