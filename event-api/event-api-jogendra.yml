server:
  port: 5464


spring:
  application:
    name: event-api
  jackson:
    serialization:
      INDENT_OUTPUT: true
  cloud:
    stream:
      kafka:
        binder:
          brokers: ${KAFKA_IP}
          defaultBrokerPort: ${KAFKA_PORT}
          #zkNodes: ${KAFKA_IP}
          defaultZkPort: 2181
          #producer-configuration:
          configuration:
            enable:
              auto:
                commit: true
            auto:
              offset:
                reset: earliest
            max:
              poll:
                records: 50
                interval:
                  ms: 300000
            heartbeat:
              interval:
                ms: 3000
            session:
              timeout:
                ms: 10000
        bindings:
          outEvent:
            group: outEvent
            destination: eventStaging
          outEventUser:
            group: outEventUser
            destination: eventUserStaging
          outTrackEvent:
            group: outTrackEvent
            destination: trackEventStaging
          outEmailRead:
            group: outEmailRead
            destination: emailReadStaging
          outNotificationRead:
            group: outNotification
            destination: trackNotification
      bindings:
        outEvent:
          destination: eventStaging
        outEventUser:
          destination: eventUserStaging
        outTrackEvent:
          destination: trackEventStaging
        outEmailRead:
          destination: emailReadStaging
        outNotificationRead:
          destination: trackNotification
  jpa:
    show-sql: false
    database-platform: org.hibernate.dialect.PostgreSQL9Dialect
    properties:
      hibernate:
        temp:
          use_jdbc_metadata_defaults: false
  datasource:
    url: jdbc:postgresql://${POSTGRES_IP}:${POSTGRES_PORT}/jogendra
    driver-class-name: org.postgresql.Driver
    username: postgres
    password: postgres
    tomcat:
      initial-size: 10
      max-wait: 10000
      max-active: 50
      test-on-borrow: true

  data:
    mongodb:
      database: jogendra
      host: ${MONGO_IP}
      port: ${MONGO_PORT}

  zipkin:
    base-url: http://${ZIPKIN_SERVER}:${ZIPKIN_PORT}/
    sender:
      type: web
  sleuth:
    sampler:
      probability: 1
  kafka:
    bootstrap-servers: ${KAFKA_IP}:${KAFKA_PORT}

security:
  header:
    token: Authorization
    username: UserName
  secret: mySecret
  expiration: 604800
  route:
    authentication:
      path: auth
      refresh: refresh




eureka:
  instance:
    prefer-ip-address: true
    health-check-url-path: /application/health
  client:
    register-with-eureka: true
    fetch-registry: true
    region: desktop
    service-url:
      defaultZone: http://${EUREKA_IP}:${EUREKA_PORT_STAGING}/eureka


logging:
  level:
    org:
      springframework: info
      apache: info
      hibernate: info
    com:
      und: info
  file: ${HOME}/log/staging/und-event-api.log

und:
  system:
    user:
      token: jasdghajskdhg
  url:
    event: http://userndot.com/event
  auth-url: http://nestros.com:8080/auth
  from-email: shiv@userndot.com