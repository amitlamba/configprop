# config context path to "/" by setting an empty string
server:
  port: 9191
  contextPath:

# JACKSON
spring:
  application:
    name: client-panel
  thymeleaf:
    cache: false
  jackson:
    serialization:
      INDENT_OUTPUT: true

  mvc:
    view:
      prefix: /WEB-INF/views/
      suffix: .jsp
# Disable feature detection by this undocumented parameter. Check the org.hibernate.engine.jdbc.internal.JdbcServiceImpl.configure method for more details.
# Because detection is disabled you have to set correct dialect by hand.
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQL9Dialect
    properties:
      hibernate:
        temp:
          use_jdbc_metadata_defaults: false

  datasource:
    url: jdbc:postgresql://${POSTGRES_IP}:${POSTGRES_PORT}/und
    driver-class-name: org.postgresql.Driver
    username: postgres
    password:  postgres
    tomcat:
      initial-size: 10
      max-wait: 10000
      max-active: 50
      test-on-borrow: true


  data:
    mongodb:
      uri: mongodb://${MONGO_IP}:${MONGO_PORT}/eventdb
      #database: eventdb
      # username: eventuser
      # password: password
      #host: ${MONGO_IP}
      #port: ${MONGO_PORT}
      #27017

security:
  header:
    token: Authorization
    username: UserName
  secret: mySecret
  expiration: 604800
  route:
    authentication:
      path: auth
      refresh: refresh


spring:
  cloud:
    stream:
      kafka:
        binder:
          brokers: ${KAFKA_IP}
          defaultBrokerPort: ${KAFKA_PORT}
          zkNodes: ${KAFKA_IP}
          defaultZkPort: 2181
          #offsetUpdateCount: 1
          #replicationFactor: 2
          #minPartitionCount: true
          #minPartitionCount: 2
        bindings:
          createschedule:
            group: createschedule
            destination: createschedule
            consumer:
              #startOffset: earliest
              group: createschedule

#logging:
#  level:
#    org.springframework:
#      security: DEBUG
eureka:
  instance:
    prefer-ip-address: true
    health-check-url-path: /application/health
  client:
    register-with-eureka: true
    fetch-registry: true
    region: desktop
    service-url:
      defaultZone: http://${EUREKA_IP}:${EUREKA_PORT}/eureka

feign:
  client:
    config:
      default:
        connectTimeout: 5000
        readTimeout: 5000
        loggerLevel: full
        errorDecoder: com.und.feign.AuthFeignErrorDecoder
        #retryer: com.example.SimpleRetryer
        #requestInterceptors:
        #  - com.example.FooRequestInterceptor
        #  - com.example.BarRequestInterceptor
        #decode404: false
        #encoder: com.example.SimpleEncoder
        #decoder: com.example.SimpleDecoder
        #contract: com.example.SimpleContract
