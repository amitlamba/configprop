# config context path to "/" by setting an empty string
server:
  port: 0

# JACKSON
spring:
  application:
    name: report-service
  cloud:
    stream:
      kafka:
        binder:
          brokers: ${KAFKA_IP}
          defaultBrokerPort: ${KAFKA_PORT}
          #zkNodes: ${KAFKA_IP}
          defaultZkPort: 2181
          auto-create-topics: true
          min-partition-count: 1
          replication-factor: 1
  thymeleaf:
    cache: false
  jackson:
    serialization:
      INDENT_OUTPUT: true
  mvc:
    view:
      prefix: /WEB-INF/views/
      suffix: .jsp
  # Disable feature detection by this undocumented parameter. Check the org.hibernate.engine.jdbc.internal.JdbcServiceImpl.configure method for more details.
  # Because detection is disabled you have to set correct dialect by hand.
  jpa:
    show-sql: true
    database-platform: org.hibernate.dialect.PostgreSQL9Dialect
    properties:
      hibernate:
        temp:
          use_jdbc_metadata_defaults: false

  datasource:
    url: jdbc:postgresql://${POSTGRES_IP}:${POSTGRES_PORT}/und
    driver-class-name: org.postgresql.Driver
    username: ${POSTGRES_USERNAME}
    password: ${POSTGRES_PASSWORD}
    tomcat:
      initial-size: 10
      max-wait: 10000
      max-active: 50
      test-on-borrow: true
    hikari:
      maximum-pool-size: 3
      idle-timeout: 10000
  data:
    mongodb:
      database: eventdb
      host: ${MONGO_IP}
      port: ${MONGO_PORT}
  flyway:
    placeholder-replacement: false

  #zipkin:
    #base-url: http://springbootzipkin:7777
    #sender:
      #type: kafka
  #sleuth:
    #sampler:
      #probability: 1
  kafka:
    bootstrap-servers: ${KAFKA_IP}:${KAFKA_PORT}
  redis:
    host: ${REDIS_IP}
    port: ${REDIS_PORT}
    database: 1
  cache:
    type: redis
    redis:
      use-key-prefix: true

security:
  header:
    token: Authorization
    username: UserName
  secret: mySecret
  expiration: 604800
  route:
    authentication:
      path: auth
      refresh: refresh

eureka:
  instance:
    prefer-ip-address: true
    health-check-url-path: /application/health
  client:
    register-with-eureka: true
    fetch-registry: true
    region: desktop
    service-url:
      defaultZone: http://${EUREKA_IP}:${EUREKA_PORT}/eureka

logging:
  level:
    org:
      springframework: info
      apache: info
      hibernate: info
    com:
      und: info
      data:
        mongodb:
          core:
            MongoTemplate: WARN
  file: ${HOME}/log/und-report-service.log

und:
  system:
    user:
      token: jasdghajskdhg
    email:
      setting:
        id: 1
  url:
    event: https://userndot.com/event
    client: https://userndot.com/client
    clientui: http://userndot.com/
  auth-url: https://userndot.com/auth
  from-email: admin@userndot.com
  lambda:
    funnel:
      secretKey: tEA3hwNdgerwF4oiVIscjtvEbPIJvwePxrNCAdhv
      accessKey: AKIAIEEV7Q6MG5DLL52Q
      region : ap-south-1
      functionName: FunnelData